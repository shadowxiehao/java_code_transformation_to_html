package text_level;

import org.testng.annotations.Test;

import java.io.*;
import java.util.Scanner;

/**
 * @author XieHao 谢昊
 * 这个类主要进行文本格式层面的转化
 */

public class Transformation {
    private String input_file;
    private String output_file;
    private JavaSyntaxHighlighter hlt;

    Transformation(String input_file, String output_file) throws Exception {

        this.input_file = input_file;
        this.output_file = output_file;
        hlt = new JavaSyntaxHighlighter();//创建JavaSyntaxHighlighter类

    }

    @Test
    public void Main_Transformation() throws Exception {

        String[] html_head = {"<!DOCTYPE html>",
                "<html>", "<head>",
                "<title>", "generated by JavaSyntaxHighlighter", "</title>",
                "<style type=\"text/css\">",
                "pre{font-family:\\'Microsoft Yahei\\';font-size:20;}",
                ".key{color:#000080;font-weight:bold;}",
                ".note{color:#808080;font-weight:bold;font-style:italic;}",
                ".str{color:#008000;font-weight:bold;}",
                ".opr{color:#DB380D;font-weight:bold;}",
                "</style>", "</head>", "<body>", "<pre>"};
        String[] html_tail = {"</pre>", "</body>", "</html>"};

        //录入文件路径 测试时用
        Scanner input = new Scanner(System.in);
        System.out.print("请输入Java文件路径:");
        input_file = input.nextLine();
        System.out.println();
        System.out.print("请输入想输出的html文件路径:");
        input_file = input.nextLine();
        System.out.println();

        File readin_file = new File(input_file);// 指定要读取的文件
        File putout_file = new File(output_file);
        BufferedReader reader = null;
        PrintWriter output = null;
        try {//这里办正事= =
            reader = new BufferedReader(new FileReader(readin_file));
            output = new PrintWriter(putout_file);
            String tempString = null;

            //这里将html_head+\n先放到文件头部
            String temp = new String();
            for (String str1 : html_head) {
                if (str1 != "<pre>") {
                    output.write(str1 + '\n');
                } else {
                    output.write("<pre>");
                }
            }

            // 一次读入一行，直到读入null为文件结束
            String str;
            String data = new String();
            int n = 0;
            while ((str = reader.readLine()) != null) {
                if (n != 0) {
                    data += '\n';
                }
                data += process(str);
                n++;
            }
            output.write(hlt.translate(data));

            //这里放入html结尾格式
            for (String str2 : html_tail) {
                if (str2 != "</html>") {
                    output.write(str2 + '\n');
                } else {
                    output.write("</html>");
                }
            }

            reader.close();//关闭输入
            output.close();//关闭输出

        } catch (IOException e) {//这里处理异常
            e.printStackTrace();
        } finally {
            if (reader != null) {
                try {
                    reader.close();
                } catch (IOException e1) {
                }
            }
        }

//        with open (input_file, encoding = 'utf-8')as f {
//            codelist = f.read().replace("<", "&lt").split('\n')  //替换java中的“<”为html的显示符
//        }
//        with open (input_file + ".html", 'w')as f { //保存html到同目录
//            data = [];
//            f.write('\n'.join(html_head));
//            for i in codelist {
//                data.append(jsh.highlight(i));
//            }//每行加标签后存如data
//            f.write(jsh.translate('\n'.join(data)));  //转换为html的<> 标签
//            f.write('\n'.join(html_tail));
//        }
        System.out.println("转换成功!已保存为:" + input_file + ".html");
    }

    public String process(String string) {
        String final_str = new String();

        string.replaceAll("<", "&lt");//替换java中的“<”为html的显示符

        final_str = hlt.highlight(string);//进行代码高亮处理
        final_str += '\n';//最后每行换行

        return final_str;
    }

}
